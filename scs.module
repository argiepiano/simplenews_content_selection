<?php
  //$Id$
  
  /*
   * @file
   * Select Drupal content to create a newsletter
   */

  /*
   * Implementation of hook_menu
   */
  function scs_menu() {
  	$items = array();
  	
  	$items['admin/config/simplenews/scs'] = array(
  	  'title' => 'Simplenews Content Selection',
  	  'description' => 'Configure what node types could be used for SCS, ...',
  	  'type' => MENU_LOCAL_TASK,
  	  'page callback' => 'drupal_get_form',
  	  'page arguments' => array('scs_admin_settings_form'),
  	  'access arguments' => array('administer scs'),
  	  'file' => 'scs.admin.inc',
  	);
  	
  	$items['admin/content/scs_node_selection'] = array(
  	  'title' => 'Simplenews Content Selection Creator',
  	  'description' => 'Select nodes to create a newsletter',
  	  'page callback' => 'drupal_get_form',
  	  'page arguments' => array('scs_node_selection'),
  	  'access arguments' => array('scs create newsletters'),
  	  'file' => 'scs.pages.inc',
  	  'type' => MENU_NORMAL_ITEM,
  	);
  	
  	$items['admin/content/scs_sort_nodes'] = array(
  	  'title' => 'Simplenews Content Select Sorter',
  	  'description' => 'Sort the nodes like you want them in the newsletter',
  	  'page callback' => 'drupal_get_form',
  	  'page arguments' => array('scs_sort_nodes'),
  	  'access arguments' => array('scs create newsletters'),
  	  'file' => 'scs.pages.inc',
  	  'type' => MENU_CALLBACK,
  	);
  	
  	return $items;
  }
  
  /*
   * Implementation of hook_perm
   */
  function scs_permission() {
  	return array(
  		'administer scs' => array(
  			'title' => t('Administer Simplenews Content Selection'),
  			'description' => t('Perform administration task for Simplenews Content Selection'),
  		);
  		'scs create newsletters' => array(
  			'title' => t('Simplenews Content Selection create newsletters'),
  			'description' => t('Create newsletters with Simplenews Content Selection'),
  		);
  	);
  }
  
  /*
   * Implementation of hook_theme
   */
  function scs_theme() {
  	return array(
  	  'scs_node_selection' => array(
  	    'arguments' => array('form' => NULL),
  	    'file' => 'scs.theme.inc',
  	  ),
  	  'scs_node_output' => array(
  	  	'arguments' => array('form' => NULL),
  	    'file' => 'scs.theme.inc',
  	  ),
  	  'scs_sort_nodes' => array(
  	    'arguments' => array('form' => NULL),
  	    'file' => 'scs.theme.inc',
  	  ),
  	  'scs_node_titles' => array(
  	  	'arguments' => array('titles' => array()),
  	  	'file' => 'scs.theme.inc',
  	  ),
  	);
  }
  
  /*
   * Implementation of hook_form_alter
   * Used to add an extra update operation to admin/content/node
   */
  function scs_form_alter(&$form, &$form_state, $form_id) {
  	if ($form_id == 'node_admin_content') {
  		$form['admin']['options']['operation']['#options']['scs'] = t('Create newsletter');
  		$form['admin']['options']['submit']['#submit'][] = 'scs_admin_content_node_submit';
  	}
  }
  
  /*
   * Extra submit function on admin/content/node form
   */
  function scs_admin_content_node_submit($form, &$form_state) {
  	if ($form_state['values']['operation'] == 'scs') {
  	  $nodes = $form_state['values']['nodes'];
  	  
  	  foreach ($nodes as $key=>$selected) {
  	  	if ($selected == 0) {
  	  		unset($nodes[$key]);
  	  	}
  	  }
  	  
      unset($_SESSION['scs_nodes']);
  	  $_SESSION['scs_nodes'] = $nodes;
  	  
  	  //TODO keep this in mind, for the moment there is no info about drupal_set_session
  	  //drupal_set_session('scs_nodes', $nodes);
  	  
  	  drupal_goto('admin/content/scs_sort_nodes');
  	}
  }
  
  /*
   * Get nodes avaiable for selection
   */
  function _scs_get_nodes() {
  	$nodes = array();
  	
  	$content_types = variable_get('scs_content_types', array());
  	
  	foreach ($content_types as $type=>$selected) {
  		if ($selected == '0') {
  			unset($content_types[$type]);
  		}
  	}
	
  	if (count($content_types) != 0) {
  		$p = db_placeholders($content_types, 'varchar');
	  	$result = db_query("SELECT nid, title, created FROM {node} WHERE (node.status <> 0)AND type IN ($p)", $content_types);
	  	
	  	while ($node = db_fetch_object($result)) {
	  		$node->created = date('Y-m-d H:i:s', $node->created);
	  		$nodes[] = $node;
	  	}
  	}
  	
  	return $nodes;
  }
  
  /*
   * Newsletter creator function
   */
  function _scs_create_newsletter($title, $nodes) {
  	global $user;
  	
  	//Title
  	if ($title == '') {
  		$title = t('Please edit the title of this newsletter');
  	}
  	
  	//Create the body of the newsletter
  	$body = '';
  	$titles = array();

  	foreach ($nodes as $node) {
  		$node = node_load(array('nid' => $node));
  		
  		if (variable_get('scs_titles', 0) != 0) {
  		  if (variable_get('scs_format', 'plain') == 'plain') {
  		  	$titles[] = $node->title;
  		  } else {
  		  	$titles[] = '<a href="#node_' . $node->nid . '">' . $node->title . '</a>';
  		  }
  		}
  		
  		$body .= theme('scs_node_output', $node);
  	}
  	
  	if (variable_get('scs_titles', 0) != 0) {
  		$body = theme('scs_node_titles', $titles) . $body;
  	}
  	
  	$newsletter = new StdClass();
  	$newsletter->type = 'simplenews';
  	$newsletter->uid = $user->uid;
  	$newsletter->title = $title;
  	$newsletter->body = $body;
  	$newsletter->teaser = node_teaser($body);
  	$newsletter->filter = variable_get('filter_default_format', 1);
  	$newsletter->status = 1;
    $newsletter->revision = 1;
    $newsletter->promote = 0;
    $newsletter->comment = 0;
    $newsletter->created = time();
    $newsletter->changed = time();
    $newsletter->simplenews['s_format'] = strtolower(variable_get('scs_format', 'plain'));
    $newsletter->priority = 0;
    $newsletter->receipt = 0;
    
    node_save($newsletter);
    
    drupal_goto('node/' . $newsletter->nid . '/edit');
  }